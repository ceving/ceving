;;(use numbers)

(define-syntax ?
  (syntax-rules ()
    ((? tag arg)
     (let ((value arg))
       (display ";;;")
       (if tag
           (begin
             (display " ")
             (display tag)
             (display ":")))
       (display " ")
       (write (quote arg))
       (display " -> ")
       (write value)
       (newline)
       value))
    ((? arg)
     (? #f arg))))

(define conditions #(EQ NE CS CC MI PL VS VC HI LS GE LT GT LE AL XX))

(import (scheme file))

(call-with-input-file "arm1.img"
  (lambda (port)
    (read-bytevector 4 port)))

(bit-match '((((27 0 0 0 0 0 0 0) (4 0)) "AND<cond><S> Rd, Rn, Rm OP #")
	     (((27 0 0 0 0 0 0 0) (7 0) (4 1)) "AND<cond><S> Rd, Rn, Rm OP Rs")
	     (((27 0 0 0 0 0 0 0) (7 1 0 0 1)) "MUL<cond><S> Rd, Rm, Rs")
	     (((27 0 0 0) (20 0) (7 1 0 1 1)) "STR<cond>H Rd, <address>")
	     (((27 0 0 0) (20 1) (7 1 0 1 1)) "LDR<cond>H Rd, <address>")
	     (((27 0 0 0) (20 0) (7 1 1 0 1)) "Undefined Instruction")
	     (((27 0 0 0) (20 1) (7 1 1 0 1)) "LDR<cond>SB Rd, <address>")
	     (((27 0 0 0) (20 0) (7 1 1 1 1)) "Undefined Instruction")
	     (((27 0 0 0) (20 1) (7 1 1 1 1)) "LDR<cond>SH Rd, <address>")
	     (((27 0 0 0 0 0 0 1) (4 0)) "EOR<cond><S> Rd, Rn, Rm OP #")
	     (((27 0 0 0 0 0 0 1) (7 0) (4 1)) "EOR<cond><S> Rd, Rn, Rm OP Rs")
	     (() "MLA<cond><S> Rd, Rm, Rs, Rn")
	     (() "SUB<cond><S> Rd, Rn, Rm OP #")
	     (() "SUB<cond><S> Rd, Rn, Rm OP Rs")
	     (() "RSB<cond><S> Rd, Rn, Rm OP #")
	     (() "RSB<cond><S> Rd, Rn, Rm OP Rs")
	     (() "ADD<cond><S> Rd, Rn, Rm OP #")
	     (() "ADD<cond><S> Rd, Rn, Rm OP Rs")
	     (() "UMULL<cond><S> RdLo, RdHi, Rm, Rs")
	     (() "ADC<cond><S> Rd, Rn, Rm OP #")
	     (() "ADC<cond><S> Rd, Rn, Rm OP Rs")
	     (() "UMLAL<cond><S> RdLo, RdHi, Rm, Rs")
	     (() "SBC<cond><S> Rd, Rn, Rm OP #")
	     (() "SBC<cond><S> Rd, Rn, Rm OP Rs")
	     (() "SMULL<cond><S> RdLo, RdHi, Rm, Rs")
	     (() "RSC<cond><S> Rd, Rn, Rm OP #")
	     (() "RSC<cond><S> Rd, Rn, Rm OP Rs")
	     (() "SMLAL<cond><S> RdLo, RdHi, Rm, Rs")
	     (() "TST<cond> Rn, Rm OP #")
	     (() "TST<cond> Rn, Rm OP Rs")
	     (() "MRS<cond> Rd, CPSR")
	     (() "SWP<cond> Rd, Rm, [Rn]")
	     (() "TEQ<cond> Rn, Rm OP #")
	     (() "TEQ<cond> Rn, Rm OP Rs")
	     (() "MSR<cond> CPSR_<fields>, Rm")
	     (() "BX<cond> Rm")
	     (() "CMP<cond> Rn, Rm OP #")
	     (() "CMP<cond> Rn, Rm OP Rs")
	     (() "MRS<cond> Rd, SPSR")
	     (() "SWP<cond>B Rd, Rm, [Rn]")
	     (() "CMN<cond> Rn, Rm OP #")
	     (() "CMN<cond> Rn, Rm OP Rs")
	     (() "MSR<cond> SPSR_<fields>, Rm")
	     (() "ORR<cond><S> Rd, Rn, Rm OP #")
	     (() "ORR<cond><S> Rd, Rn, Rm OP Rs")
	     (() "MOV<cond><S> Rd, Rm OP #")
	     (() "MOV<cond><S> Rd, Rm OP Rs")
	     (() "BIC<cond><S> Rd, Rn, Rm OP #")
	     (() "BIC<cond><S> Rd, Rn, Rm OP Rs")
	     (() "MVN<cond><S> Rd, Rm OP #")
	     (() "MVN<cond><S> Rd, Rm OP Rs")
	     (() "AND<cond><S> Rd, Rn, #")
	     (() "EOR<cond><S> Rd, Rn, #")
	     (() "SUB<cond><S> Rd, Rn, #")
	     (() "RSB<cond><S> Rd, Rn, #")
	     (() "ADD<cond><S> Rd, Rn, #")
	     (() "ADC<cond><S> Rd, Rn, #")
	     (() "SBC<cond><S> Rd, Rn, #")
	     (() "RSC<cond><S> Rd, Rn, #")
	     (() "TST<cond> Rn, #")
	     (() "TEQ<cond> Rn, #")
	     (() "MSR<cond> CPSR_f, #")
	     (() "CMP<cond> Rn, #")
	     (() "CMN<cond> Rn, #")
	     (() "MSR<cond> SPSR_f, #")
	     (() "ORR<cond><S> Rd, Rn, #")
	     (() "MOV<cond><S> Rd, #")
	     (() "BIC<cond><S> Rd, Rn, #")
	     (() "MVN<cond><S> Rd, #")
	     (() "STR<cond> Rd, Rn, #")
	     (() "LDR<cond> Rd, Rn, #")
	     (() "STR<cond>B Rd, Rn, #")
	     (() "LDR<cond>B Rd, Rn, #")
	     (() "STR<cond>T Rd, Rn, #")
	     (() "LDR<cond>T Rd, Rn, #")
	     (() "STR<cond>BT Rd, Rn, #")
	     (() "LDR<cond>BT Rd, Rn, #")
	     (() "STR<cond> Rd, Rn, #")
	     (() "LDR<cond> Rd, Rn, #")
	     (() "STR<cond>B Rd, Rn, #")
	     (() "LDR<cond>B Rd, Rn, #")
	     (() "STR<cond>T Rd, Rn, #")
	     (() "LDR<cond>T Rd, Rn, #")
	     (() "STR<cond>BT Rd, Rn, #")
	     (() "LDR<cond>BT Rd, Rn, #")
	     (() "Undefined Instruction")
	     (() "STM<cond><addrmode> Rm<!>, reg list")
	     (() "LDM<cond><addrmode> Rm<!>, reg list")
	     (() "STM<cond><addrmode> Rm, reg list^")
	     (() "UNPREDICTABLE")
	     (() "LDM<cond><addrmode> Rm, reg list^")
	     (() "UNPREDICTABLE")
	     (() "STM<cond><addrmode> Rm<!>, reg list^")
	     (() "LDM<cond><addrmode> Rm<!>, reg list^")
	     (() "B<cond> <target addr>")
	     (() "BL<cond> <target addr>")
	     (() "STC<cond> p<cp_num>, CRd, #")
	     (() "LDC<cond> p<cp_num>, CRd, #")
	     (() "CDP<cond> p<cp#>,<o1>,CRd,CRn,CRm,<o2>")
	     (() "MCR<cond> p<cp#>,<o1>,Rd,CRn,CRm,<o2>")
	     (() "MRC<cond> p<cp#>,<o1>,Rd,CRn,CRm,<o2>")
	     (() "SWI <swi_number>")
	     (() "ADC<cond><S> Rd, Rn, #")
	     (() "ADC<cond><S> Rd, Rn, Rm OP #")
	     (() "ADC<cond><S> Rd, Rn, Rm OP Rs")
	     (() "ADD<cond><S> Rd, Rn, #")
	     (() "ADD<cond><S> Rd, Rn, Rm OP #")
	     (() "ADD<cond><S> Rd, Rn, Rm OP Rs")
	     (() "AND<cond><S> Rd, Rn, #")
	     (() "AND<cond><S> Rd, Rn, Rm OP #")
	     (() "AND<cond><S> Rd, Rn, Rm OP Rs")
	     (() "B<cond> <target addr>")
	     (() "BIC<cond><S> Rd, Rn, #")
	     (() "BIC<cond><S> Rd, Rn, Rm OP #")
	     (() "BIC<cond><S> Rd, Rn, Rm OP Rs")
	     (() "BL<cond> <target addr>")
	     (() "BX<cond> Rm")
	     (() "CDP<cond> p<cp#>,<o1>,CRd,CRn,CRm,<o2>")
	     (() "CMN<cond> Rn, #")
	     (() "CMN<cond> Rn, Rm OP #")
	     (() "CMN<cond> Rn, Rm OP Rs")
	     (() "CMP<cond> Rn, #")
	     (() "CMP<cond> Rn, Rm OP #")
	     (() "CMP<cond> Rn, Rm OP Rs")
	     (() "EOR<cond><S> Rd, Rn, #")
	     (() "EOR<cond><S> Rd, Rn, Rm OP #")
	     (() "EOR<cond><S> Rd, Rn, Rm OP Rs")
	     (() "LDC<cond> p<cp_num>, CRd, #")
	     (() "LDM<cond><addrmode> Rm, reg list^")
	     (() "LDM<cond><addrmode> Rm<!>, reg list")
	     (() "LDM<cond><addrmode> Rm<!>, reg list^")
	     (() "LDR<cond> Rd, Rn, #")
	     (() "LDR<cond> Rd, Rn, #")
	     (() "LDR<cond>B Rd, Rn, #")
	     (() "LDR<cond>B Rd, Rn, #")
	     (() "LDR<cond>BT Rd, Rn, #")
	     (() "LDR<cond>BT Rd, Rn, #")
	     (() "LDR<cond>H Rd, <address>")
	     (() "LDR<cond>SB Rd, <address>")
	     (() "LDR<cond>SH Rd, <address>")
	     (() "LDR<cond>T Rd, Rn, #")
	     (() "LDR<cond>T Rd, Rn, #")
	     (() "MCR<cond> p<cp#>,<o1>,Rd,CRn,CRm,<o2>")
	     (() "MLA<cond><S> Rd, Rm, Rs, Rn")
	     (() "MOV<cond><S> Rd, #")
	     (() "MOV<cond><S> Rd, Rm OP #")
	     (() "MOV<cond><S> Rd, Rm OP Rs")
	     (() "MRC<cond> p<cp#>,<o1>,Rd,CRn,CRm,<o2>")
	     (() "MRS<cond> Rd, CPSR")
	     (() "MRS<cond> Rd, SPSR")
	     (() "MSR<cond> CPSR_<fields>, Rm")
	     (() "MSR<cond> CPSR_f, #")
	     (() "MSR<cond> SPSR_<fields>, Rm")
	     (() "MSR<cond> SPSR_f, #")
	     (() "MUL<cond><S> Rd, Rm, Rs")
	     (() "MVN<cond><S> Rd, #")
	     (() "MVN<cond><S> Rd, Rm OP #")
	     (() "MVN<cond><S> Rd, Rm OP Rs")
	     (() "ORR<cond><S> Rd, Rn, #")
	     (() "ORR<cond><S> Rd, Rn, Rm OP #")
	     (() "ORR<cond><S> Rd, Rn, Rm OP Rs")
	     (() "RSB<cond><S> Rd, Rn, #")
	     (() "RSB<cond><S> Rd, Rn, Rm OP #")
	     (() "RSB<cond><S> Rd, Rn, Rm OP Rs")
	     (() "RSC<cond><S> Rd, Rn, #")
	     (() "RSC<cond><S> Rd, Rn, Rm OP #")
	     (() "RSC<cond><S> Rd, Rn, Rm OP Rs")
	     (() "SBC<cond><S> Rd, Rn, #")
	     (() "SBC<cond><S> Rd, Rn, Rm OP #")
	     (() "SBC<cond><S> Rd, Rn, Rm OP Rs")
	     (() "SMLAL<cond><S> RdLo, RdHi, Rm, Rs")
	     (() "SMULL<cond><S> RdLo, RdHi, Rm, Rs")
	     (() "STC<cond> p<cp_num>, CRd, #")
	     (() "STM<cond><addrmode> Rm, reg list^")
	     (() "STM<cond><addrmode> Rm<!>, reg list")
	     (() "STM<cond><addrmode> Rm<!>, reg list^")
	     (() "STR<cond> Rd, Rn, #")
	     (() "STR<cond> Rd, Rn, #")
	     (() "STR<cond>B Rd, Rn, #")
	     (() "STR<cond>B Rd, Rn, #")
	     (() "STR<cond>BT Rd, Rn, #")
	     (() "STR<cond>BT Rd, Rn, #")
	     (() "STR<cond>H Rd, <address>")
	     (() "STR<cond>T Rd, Rn, #")
	     (() "STR<cond>T Rd, Rn, #")
	     (() "SUB<cond><S> Rd, Rn, #")
	     (() "SUB<cond><S> Rd, Rn, Rm OP #")
	     (() "SUB<cond><S> Rd, Rn, Rm OP Rs")
	     (() "SWI <swi_number>")
	     (() "SWP<cond> Rd, Rm, [Rn]")
	     (() "SWP<cond>B Rd, Rm, [Rn]")
	     (() "TEQ<cond> Rn, #")
	     (() "TEQ<cond> Rn, Rm OP #")
	     (() "TEQ<cond> Rn, Rm OP Rs")
	     (() "TST<cond> Rn, #")
	     (() "TST<cond> Rn, Rm OP #")
	     (() "TST<cond> Rn, Rm OP Rs")
	     (() "UMLAL<cond><S> RdLo, RdHi, Rm, Rs")
	     (() "UMULL<cond><S> RdLo, RdHi, Rm, Rs")
	     (() "Undefined Instruction")
	     (() "Undefined Instruction")
	     (() "Undefined Instruction")
	     (() "UNPREDICTABLE")
	     (() "UNPREDICTABLE")


	     ))


(define (bit-match def)
  (lambda (int)
    
